name: Publish Extension
on:
  workflow_dispatch:
    inputs:
      vsix_artifact:
        description: "Name of the .vsix artifact from CI to publish"
        required: true
        type: string
      workflow_run_id:
        description: "Run ID of the workflow that generated the artifact (passed to findBy options)"
        required: true
        type: number
      publish_ms:
        description: "Publish to VS Code Marketplace"
        required: false
        default: true
        type: boolean
      publish_ovsx:
        description: "Publish to Open VSX"
        required: false
        default: true
        type: boolean
env:
  debug_ci: true
jobs:
  check_auth:
    runs-on: ubuntu-latest
    steps:
      - name: Check triggering user permissions
        id: check_user_permissions
        uses: actions-cool/check-user-permission@v2.3.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.triggering_actor }}
          require: write
          error-if-missing: true
    outputs:
      authorized: ${{ steps.check_user_permissions.outputs.require-result }}
  publish_vscode:
    name: Publish Extension to Marketplace(s)
    runs-on: ubuntu-latest
    needs: check_auth
    if: format('{0}', needs.check_auth.outputs.authorized) == 'true'
    steps:
      - name: Download artifact
        id: download_artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.vsix_artifact }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.inputs.workflow_run_id }}
      - name: Check for vsce
        run: which vsce || echo "vsce not found"
        if: ${{ env.debug_ci == 'true' || runner.debug == '1' }}
      - name: List files
        run: ls -lA
        if: ${{ env.debug_ci == 'true' || runner.debug == '1' }}
      - name: Install eza (Linux deb)
        run: sudo apt-get install -y eza
        if: ${{ env.debug_ci == 'true' || runner.debug == '1' }}
      - name: List files in pretty print tree view
        run: eza --icons --color-scale --classify --git -la --header --tree --ignore-glob='.git'  --git-ignore --binary
        if: ${{ env.debug_ci == 'true' || runner.debug == '1' }}
      - name: Get vsix path
        id: get_vsix_path
        run: find ${{ steps.download_artifact.outputs.download-path }} -name '*.vsix' -type f -printf 'vsix_name=%f' -quit >> "$GITHUB_ENV"
      - name: Debug vsix_name
        run: |
          pwd
          echo "VSIX Name: ${{ steps.get_vsix_path.outputs.vsix_name }}"
          find ${{ steps.download_artifact.outputs.download-path }} -name '*.vsix' -type f -printf 'vsix_name=%f' -quit
          find ${{ steps.download_artifact.outputs.download-path }} -name '*.vsix' -type f -print -quit
        if: ${{ env.debug_ci == 'true' || runner.debug == '1' }}
      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: "${{ secrets.VSCE_PAT }}"
        run: echo npx vsce publish --pre-release --no-dependencies --no-yarn --no-git-tag-version --no-verify-signatures --no-confirm --packagePath ${{ steps.download_artifact.outputs.download-path }}/${{ steps.get_vsix_path.outputs.vsix_name }}
        if: github.event.inputs.publish_ms == 'true'
      - name: Publish to Open VSX
        env:
          OVSX_PAT: "${{ secrets.OVSX_PAT }}"
        run: echo npx ovsx publish --pre-release --no-dependencies ${{ steps.download_artifact.outputs.download-path }}/${{ steps.get_vsix_path.outputs.vsix_name }}
        if: github.event.inputs.publish_ovsx == 'true'