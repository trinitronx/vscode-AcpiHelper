{
  "name": "acpihelper",
  "displayName": "AcpiHelper",
  "description": "Provide ACPI Language Help Info",
  "version": "1.0.0",
  "icon": "Logo.png",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:acpihelper.HelpInfo",
    "onLanguage:EASL",
    "onCommand:acpihelper.reloadConfig"
  ],
  "capabilities": {
    "hoverProvider": "true"
  },
  "publisher": "trinitronx",
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/trinitronx/vscode-AcpiHelper/"
  },
  "contributes": {
    "commands": [
      {
        "command": "acpihelper.HelpInfo",
        "title": "Help",
        "category": "ACPI Helper"
      },
      {
        "command": "acpihelper.reloadConfig",
        "title": "Reload Config",
        "shortTitle": "Reload",
        "category": "ACPI Helper"
      }
    ],
    "configuration": {
      "title": "Acpi Helper Extension",
      "type": "object",
      "properties": {
        "acpihelper.includeUserConfig": {
          "type": "boolean",
          "default": false,
          "description": "Include the extra ACPI keywords & descriptions from a user-provided JSON config file, specified by the configPath setting. If false, the included settings from this extension will be used. (\"AcpiCfg.json\" in the extension directory)"
        },
        "acpihelper.configPath": {
          "type": "string",
          "default": "",
          "description": "Absolute path to a JSON config file containing extra ACPI ASL keyword descriptions. If not set (empty string) and includeUserConfig is true, the default \"AcpiCfg.json\" bundled with this extension will not be used. This is useful to only display help for standard keywords specified by the ACPI spec."
        }
      }
    },
    "languages": [
      {
        "id": "EASL",
        "aliases": [
          "asl"
        ],
        "extensions": [
          ".asl",
          ".act",
          ".iii"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "EASL",
        "scopeName": "source.asl",
        "path": "./syntaxes/asl.tmLanguage.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "compile-test": "tsc -p ./tsconfig.test.json && npm run copy-test-fixtures",
    "copy-test-fixtures": "cp -r src/test/fixtures out/test/",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile-test && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@stylistic/eslint-plugin": "^4.4.0",
    "@stylistic/eslint-plugin-ts": "^4.4.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/rewire": "^2.5.30",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.28.0",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "rewire": "^7.0.0",
    "sinon": "^20.0.0",
    "typescript": "^5.8.3",
    "npm-run-all": "^4.1.5"
  }
}
